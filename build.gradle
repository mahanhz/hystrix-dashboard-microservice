buildscript {
	ext {
		NEXUS_REPO_URL = 'http://192.168.1.31:8082/nexus/content/repositories'

		springBootVersion = '1.4.1.RELEASE'
		sshVersion = '2.2.0'
		gradleReleaseVersion = '2.4.0'
		gradleOwaspVersion = '1.4.3'
		queryDslPluginVersion = '1.0.7'
	}

	repositories {
		mavenCentral()

		maven {
			url 'https://plugins.gradle.org/m2/'
		}
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.hidetake:gradle-ssh-plugin:${sshVersion}")
		classpath("net.researchgate:gradle-release:${gradleReleaseVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'spring-boot'
apply plugin: 'org.hidetake.ssh'
apply plugin: 'net.researchgate.release'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

task wrapper(type: Wrapper) {
	gradleVersion = '2.14'
}

// Dependencies
apply from: 'gradle-segment/dependencies.gradle'

// Test
apply from: 'gradle-segment/test.gradle'

// Publish to Nexus
apply from: 'gradle-segment/publish.gradle'

// Deploy
apply from: 'gradle-segment/deploy.gradle'

// Create a fully executable jar
springBoot {
	executable = true

	embeddedLaunchScriptProperties = [initInfoDescription: project.description,
									  initInfoShortDescription: project.name,
									  initInfoProvides: jar.baseName,
									  mode: 'service']
}

// Make the System.properties available in the bootRun task.
bootRun.systemProperties = System.properties

// Automatically expand info properties
processResources {
	filesMatching('**/application.yml') { expand(project.properties) }
}

ext.jenkinsNode = System.env.NODE_NAME
ext.jenkinsJobName = System.env.JOB_NAME
ext.jenkinsBuildTimestamp = System.env.BUILD_TIMESTAMP
ext.jenkinsBuildId = System.env.BUILD_ID
ext.jenkinsBuildNumber = System.env.BUILD_NUMBER
ext.jenkinsGitCommit = System.env.GIT_COMMIT_ID // Custom env variable set in the Jenkinsfile
ext.jenkinsGitBranch = System.env.BRANCH_NAME
